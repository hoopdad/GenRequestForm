@model GenReq.Models.GenRequest

@{
    ViewData["Title"] = "Edit a Content Generation Request";
}

<h1>Edit a Content Generation Request</h1>
<div class="row">
    <p>This request is editable until the Generator begins working on it.</p>
    <p><b>Title</b><br />What is the title or topic of the content you wish to generate? Be as specific as you would like. The GPT will create content based on its understanding of this, in a formatted and clearly-written way.</p>
    <p><b>Actor</b><br />From whose perspective is the content being written? It will be as if a person of your description is writing this content for you. Be as specific as you would like.</p>
</div>

<h4>Content Generation Request</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input asp-for="OwningUserId" type="hidden" />
            <input asp-for="CreatedDate" type="hidden" />
            <input asp-for="GeneratedDate" type="hidden" />
            <input asp-for="Status" type="hidden" />

            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <textarea asp-for="Title" class="form-control"></textarea>
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Actor" class="control-label"></label>
                <textarea asp-for="Actor" class="form-control"></textarea>
                <span asp-validation-for="Actor" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
